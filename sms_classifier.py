# -*- coding: utf-8 -*-
"""SMS_Classifier

Automatically generated by Colaboratory.

Original file is located at
    https://colab.research.google.com/drive/1gibQ-lBrJahd04syPJDH-3WBDipGBI3A
"""

import pandas as pd
from nltk.corpus import stopwords
from nltk.tokenize import word_tokenize
from nltk.stem import PorterStemmer
from sklearn.model_selection import train_test_split
from sklearn.feature_extraction.text import CountVectorizer
from sklearn.naive_bayes import MultinomialNB
from sklearn.metrics import accuracy_score, classification_report, confusion_matrix

nltk.download('stopwords')
nltk.download('punkt')

df = pd.read_csv("spam_texts.csv", encoding="ISO-8859-1")

stop_words = set(stopwords.words('english'))
ps = PorterStemmer()

def preprocess_text(text):
    words = word_tokenize(text)
    words = [ps.stem(w.lower()) for w in words if w.isalpha() and w.lower() not in stop_words]
    return ' '.join(words)

df['processed_message'] = df['text'].apply(preprocess_text)

X_train, X_test, y_train, y_test = train_test_split(df['processed_message'], df['image'], test_size=0.2, random_state=42)

vectorizer = CountVectorizer()
X_train_bow = vectorizer.fit_transform(X_train)
X_test_bow = vectorizer.transform(X_test)

classifier = MultinomialNB()
classifier.fit(X_train_bow, y_train)

y_pred = classifier.predict(X_test_bow)

print("Accuracy:", accuracy_score(y_test, y_pred))

print("\nConfusion Matrix:\n", confusion_matrix(y_test, y_pred))

print("\nClassification Report:\n", classification_report(y_test, y_pred))